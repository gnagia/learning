(window.webpackJsonpLearning=window.webpackJsonpLearning||[]).push([[0],{21:function(e,a,t){e.exports=t(36)},26:function(e,a,t){},27:function(e,a,t){},28:function(e,a,t){},34:function(e,a,t){},35:function(e,a,t){},36:function(e,a,t){"use strict";t.r(a);var l=t(0),n=t.n(l),c=t(14),r=t.n(c),o=t(4),m=(t(26),t(15)),i=t(16),s=t(20),u=t(19),d=t(1),p=(t(27),t(28),function(){return n.a.createElement("div",{className:"wrapper"},n.a.createElement("div",{className:"container"},n.a.createElement("div",{className:"box"},n.a.createElement("div",{className:"content"},n.a.createElement("div",{className:"main"},"01"),n.a.createElement("div",{className:"type"},"Kubernetes"),n.a.createElement("div",{className:"details"},"Orchestration tool"),n.a.createElement(o.b,{className:"option",to:"/kubernetes"},"Read More"))),n.a.createElement("div",{className:"box"},n.a.createElement("div",{className:"content"},n.a.createElement("div",{className:"main"},"02"),n.a.createElement("div",{className:"type"},"Docker"),n.a.createElement("div",{className:"details"},"Containerization."),n.a.createElement(o.b,{className:"option",to:"/docker"},"Read More")))))}),E=t(9),k=t.n(E);t(34);var b=function(){return n.a.createElement("div",{className:"page-body"},n.a.createElement("div",{className:"scrollblock"},n.a.createElement("h1",null,"Kubernetes - the simple guide"),n.a.createElement("p",null,"just a simple guide for getting started with kubernetes."),n.a.createElement("p",{className:"meta"}," by ",n.a.createElement(o.b,{to:"http://gnagia.github.io/"},"Guneet Singh Nagia ")),n.a.createElement("div",null,n.a.createElement("img",{src:k.a,alt:"down"}))),n.a.createElement("div",{className:"scrollblock block-setup"},n.a.createElement("h2",null,"setup"),n.a.createElement("p",null,n.a.createElement(o.b,{to:"#"},"Install minikube ")),n.a.createElement("p",null,n.a.createElement(o.b,{to:"#"},"Install virtualbox")),n.a.createElement("p",null,n.a.createElement(o.b,{to:"#"},"Install minikube"))),n.a.createElement("div",{className:"scrollblock block-object"},n.a.createElement("h2",null,"objects"),n.a.createElement("p",null,"Pods"),n.a.createElement("p",null,"Deployment"),n.a.createElement("p",null,"Service"),n.a.createElement("p",null,"Volume"),n.a.createElement("p",null,"Network")),n.a.createElement("div",{className:"scrollblock block-pods"},n.a.createElement("h2",null,"pods"),n.a.createElement("p",null,"Smallest unit"),n.a.createElement("p",null,"Check status of running pods : ",n.a.createElement("code",null,"kubectl get pods"))),n.a.createElement("div",{className:"scrollblock block-deployment"},n.a.createElement("h2",null,"deployment"),n.a.createElement("p",null,"Control pods")),n.a.createElement("div",{className:"scrollblock block-service"},n.a.createElement("h2",null,"Service"),n.a.createElement("p",null,"Resposible for exposing pod to other cluster and externally. It group pods with a shared IP"),n.a.createElement("code",null,"kubectl expose deployment (app-name) --p=(port-number) --type=(ClusterIP/NodePort/LoadBalancer)"),n.a.createElement("p",null,"Check status of running services : ",n.a.createElement("code",null,"kubectl get services")),n.a.createElement("p",null,"For minikube (local machine), external ip is not provided by default, so run ",n.a.createElement("code",null,"minikube service (app-name)")," ")),n.a.createElement("div",{className:"scrollblock block-pod"},n.a.createElement("h2",null,"miscellaneous commands"),n.a.createElement("p",{className:"meta"},"manual scaling ",n.a.createElement("code",null,"kubectl scale deployment/(app-name) --replica=(number)")),n.a.createElement("p",{className:"meta"},"history of deployment ",n.a.createElement("code",null,"kubectl rollout history deployment/(app-name)")),n.a.createElement("p",{className:"meta"},"rollback to last ",n.a.createElement("code",null,"kubectl rollout undo deployment/(app-name)")),n.a.createElement("p",{className:"meta"},"rollout to particular older version ",n.a.createElement("code",null,"kubectl rollout undo deployment/(app-name) --to-revision=(number)"))),n.a.createElement("div",{className:"scrollblock block-pods"},n.a.createElement("h2",null,"config.yml"),n.a.createElement("code",null,"kubectl apply -f config.yml")))};var h=function(){return n.a.createElement("div",{className:"page-body"},n.a.createElement("div",{className:"scrollblock block-object"},n.a.createElement("h2",null,"helm"),n.a.createElement("p",null,"Helm is package manager for kubernetes"),n.a.createElement("p",null,"Package yaml file and distribute them in public and private repositories"),n.a.createElement("p",null,"Helm chart - bundle of yaml files, create your own helm charts with helm - push them to helm repository - download and use existing ones"),n.a.createElement("p",null,"Templating engine"),n.a.createElement("p",null,"in ci/cd, use template file and replace value in real time"),n.a.createElement("p",null,"different environment"),n.a.createElement("p",null,"(chart-name) - (Chart.yaml) : meta info about chart (values.yaml) : values for template files (charts) : chart dependencies (templates) : actual template files"),n.a.createElement("div",{className:"code"},"helm install (chartname)"),n.a.createElement("p",null,"Release managment"),n.a.createElement("p",null)))};t(35);var g=function(){return n.a.createElement("div",{className:"page-body"},n.a.createElement("div",{className:"scrollblock"},n.a.createElement("h1",null,"Docker - the simple guide"),n.a.createElement("p",null,"just a simple guide for getting started with docker."),n.a.createElement("p",{className:"meta"},"by ",n.a.createElement(o.b,{to:"http://gnagia.github.io/"},"Guneet Singh Nagia")),n.a.createElement("div",null,n.a.createElement("img",{src:k.a,alt:"down"}))),n.a.createElement("div",{className:"scrollblock block-one"},n.a.createElement("h2",null,"Image"),n.a.createElement("p",null,"First Create DockerFile"),n.a.createElement("p",null,"Create image : ",n.a.createElement("code",null,"docker build -t (image-name) .")),n.a.createElement("p",null,"List images : ",n.a.createElement("code",null,"docker images")," "),n.a.createElement("p",null,"Delete image : ",n.a.createElement("code",null,"docker rmi (image-name)/docker prune")),n.a.createElement("p",null,"Analyze image : ",n.a.createElement("code",null,"docker image inspect"))),n.a.createElement("div",{className:"scrollblock block-two"},n.a.createElement("h2",null,"Container"),n.a.createElement("p",null,"Next is to run image as container, we can run as much containers we need from an image"),n.a.createElement("p",null,"Create Container : ",n.a.createElement("code",null,"docker run -d -p (port1:port2) --name (container-name) (dockerid)/(image-name)")),n.a.createElement("p",null,"List Containers : ",n.a.createElement("code",null,"docker ps -a")),n.a.createElement("p",null,"Stop Container : docker stop (container-name)"),n.a.createElement("p",null,"Delete Container : docker rm (container-name)"),n.a.createElement("p",null,"Logs of a Container : docker logs -f (container-name)")),n.a.createElement("div",{className:"scrollblock block-deployment"},n.a.createElement("h2",null,"push image to docker hub"),n.a.createElement("p",null,"If not logged in :",n.a.createElement("code",null,"docker login")),n.a.createElement("p",null,n.a.createElement("code",null,"docker tag (app-name) (dockerid)/(app-name)")),n.a.createElement("p",null,n.a.createElement("code",null,"docker push (dockerid)/(app-name)"))),n.a.createElement("div",{className:"scrollblock block-deployment"},n.a.createElement("h2",null,"docker network"),n.a.createElement("p",null,"1) container to web, by default it is established."),n.a.createElement("p",null,"2) container to Local DB, replace `localhost` in url with ",n.a.createElement("code",null,"host.docker.internal")," or ",n.a.createElement("code",null,"docker.for.mac.host.internal")),n.a.createElement("p",null,"3) container to container communication",n.a.createElement("div",null,"Option 1 : Hardcode IPs"),n.a.createElement("code",null,"docker container inspect (conatiner-name)"),". Then Copy the `IPAddress` under `NetworkSettings`. Then replace localhost with ipaddress of container .",n.a.createElement("div",null,"Option 2: Use network"),n.a.createElement("div",null,"Create Network ",n.a.createElement("code",null,"docker network create (network-name)")),n.a.createElement("div",null,"List Networks ",n.a.createElement("code",null,"docker network ls ")),n.a.createElement("div",null,"Run container within network ",n.a.createElement("code",null,"docker run --network (network-name) ...")),n.a.createElement("div",null,"Replace localhost with container name and no need to publish port, as containers can interact freely with other container within network."))),n.a.createElement("div",{className:"scrollblock block-pods"},n.a.createElement("h2",null,"deploy in cloud"),n.a.createElement("p",null,"AWS : connect to EC2, where ")))},v=function(e){Object(s.a)(t,e);var a=Object(u.a)(t);function t(){return Object(m.a)(this,t),a.apply(this,arguments)}return Object(i.a)(t,[{key:"render",value:function(){return n.a.createElement("div",null,n.a.createElement(d.c,null,n.a.createElement(d.a,{path:"/",exact:!0,component:p}),n.a.createElement(d.a,{path:"/kubernetes",component:b}),n.a.createElement(d.a,{exact:!0,path:"/docker",component:g}),n.a.createElement(d.a,{exact:!0,path:"/helm",component:h})))}}]),t}(n.a.Component);r.a.render(n.a.createElement(o.a,{basename:"/learning"},n.a.createElement(v,null)),document.getElementById("root"))},9:function(e,a,t){e.exports=t.p+"static/media/arrow.222c6d8e.png"}},[[21,1,2]]]);
//# sourceMappingURL=main.f68c5e90.chunk.js.map