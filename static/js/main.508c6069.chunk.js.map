{"version":3,"sources":["components/header/header.component.jsx","pages/kubernetes/kubernetes.jsx","pages/reactive-spring/reactive.jsx","pages/docker/docker.jsx","App.js","index.js","img/arrow.png"],"names":["Header","className","to","Kubernetes","src","arrow","alt","style","display","flexDirection","textAlign","color","Reactive","Docker","App","path","exact","component","React","Component","ReactDOM","render","basename","process","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.508c6069.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.css';\n\nconst Header = () => (\n  <div className=\"wrapper\">\n    <div className=\"container\">\n\n    <div className=\"box\">\n            <div className=\"content\">\n                <div className=\"main\">01</div>\n                <div className=\"type\">Docker</div>\n                <div className=\"details\">Containerization.</div>\n                <Link className='option' to='/docker'>Read More</Link>\n            </div>\n        </div>\n\n        <div className=\"box\">\n            <div className=\"content\">\n                <div className=\"main\">02</div>\n                <div className=\"type\">Kubernetes</div>\n                <div className=\"details\">Orchestration tool</div>\n                <Link className='option' to='/kubernetes'>Read More</Link>\n            </div>\n        </div>\n  \n        <div className=\"box\">\n            <div className=\"content\">\n                <div className=\"main\">03</div>\n                <div className=\"type\">Spring 5</div>\n                <div className=\"details\">Reactive Spring</div>\n                <Link className='option' to='/reactive'>Read More</Link>\n            </div>\n        </div>\n        \n   \n    </div>\n  </div>\n);\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport arrow from '../../img/arrow.png';\nimport './styles.css';\n\nfunction Kubernetes (){\n    return(\n        <div className=\"page-body\">\n            <div className=\"scrollblock\">\n            <h1>Kubernetes - the simple guide</h1>\n            <p>just a simple guide for getting started with kubernetes.</p>\n            <p className=\"meta\"> by <Link to=\"http://gnagia.github.io/\">Guneet Singh Nagia </Link></p>\n            <div><img src={arrow} alt=\"down\" /></div>\n        </div>\n    \n        <div className=\"scrollblock block-one\">\n            <h2>setup</h2>\n            <p><Link to=\"https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/\">Install kubectl </Link></p>\n            <p><Link to=\"#\">Install virtualbox</Link></p>\n            <p><Link to=\"https://minikube.sigs.k8s.io/docs/start/\">Install minikube</Link></p>\n        </div>\n    \n        <div className=\"scrollblock block-two\">\n            <h2>Objects</h2>\n            <div style={{display:'flex', flexDirection:'row'}}>\n                <p>Pods</p>\n                <p>Deployment</p>\n                <p>Service</p>\n                <p>Replica Set</p>\n            </div>\n        </div>\n    \n        <div className=\"scrollblock block-three\">\n            <h2>pods</h2>\n            <p>Smallest unit, contains containers, it deploys single instance of an application</p>\n            <i><h6 style={{textAlign:\"left\"}}>\n                <ul>apiVersion: v1</ul>\n                <ul>kind: Pod</ul>\n                <ul>metadata:\n                    <li className=\"single\">name:</li>\n                    <li className=\"single\">labels:</li>\n                    <li className=\"double\">key1:value1</li>\n                    <li className=\"double\">key2:value2</li>\n                </ul>\n                <ul>spec:\n                    <li className=\"single\">containers:</li>\n                    <li className=\"double\">- name:</li>\n                    <li className=\"double\"> &nbsp;&nbsp;&nbsp;image:</li>\n                </ul>\n            </h6></i>\n            <p>Create a Pod: <code>kubectl create -f (pod-name).yml</code></p>\n            <p>Check status of running pods: <code>kubectl get pods</code></p>\n            <p>All Details of pod: <code>kubectl describe pod (pod-name)</code></p>\n            <p>Few Details of pod: <code>kubectl get pods  -o wide</code></p>\n        </div>\n    \n        <div className=\"scrollblock block-four\">\n            <h2>deployment</h2>\n            <p>Rolling updates, undo changes, pause and resume changes </p>\n            <p className=\"meta\"> If we create Deployment object, it will by default create replicaSet which by default creates Pods</p>\n            <i><h6 style={{textAlign:\"left\"}}>\n                <ul>apiVersion: apps/v1</ul>\n                <ul>kind: Deployment</ul>\n                <ul>metadata:\n                    <li className=\"single\">name:</li>\n                    <li className=\"single\">labels:</li>\n                    <li className=\"double\">key1:value1</li>\n                    <li className=\"double\">key2:value2</li>\n                </ul>\n                <ul>spec:\n                    <li className=\"single\">replicas:</li>\n                    <li className=\"single\">selector:</li>\n                    <li className=\"double\">matchLables:</li>\n                    <li className=\"triple\">type:</li>\n                    <li className=\"single\">template:</li>\n                    <li className=\"double\">metadata:</li>\n                    <p className=\"meta triple\" style={{color:'white'}}>(copy metadata from pod object)</p> \n                </ul>\n            </h6></i>\n            <p>Create a Deployment: <code>kubectl create -f (deployment-name).yml</code></p>\n            <p>Check status of running deployment: <code>kubectl get deployment</code></p>\n            <p>Rollback: <code>kubectl rollout status deployment/(deployment-name)</code> </p>\n            <p>History: <code>kubectl rollout history deployment/(deployment-name)</code> </p>\n            <p>Update: <code>kubectl apply -f (deployment-name).yml</code> </p>\n        </div>\n    \n        <div className=\"scrollblock block-five\">\n            <h2>Service</h2>\n            <p>Resposible for exposing pod to other cluster and externally. It group pods with a shared IP</p>\n            <i><h6 style={{textAlign:\"left\"}}>\n                <ul>apiVersion: v1</ul>\n                <ul>kind: Service</ul>\n                <ul>metadata:\n                    <li className=\"single\">name:</li>\n                </ul>\n                <ul>spec:\n                    <li className=\"single\">type:</li>\n                    <li className=\"single\">ports:</li>\n                    <li className=\"double\">- &nbsp;&nbsp;&nbsp;targetPort:</li>\n                    <li className=\"double\">&nbsp;&nbsp;&nbsp;&nbsp; port:</li>\n                    <li className=\"double\">&nbsp;&nbsp;&nbsp;&nbsp; nodePort:</li>\n                    <li className=\"single\">selector:</li>\n                    <li className=\"double\">app:</li>\n                    <li className=\"double\">type:</li>\n                </ul>\n                <div className=\"meta\">selector is labels of pod</div>\n                <div className=\"meta\">type: NodePort/ClusterIP/LoadBalancer</div>\n                <div className=\"meta\">targetPort is port of POD</div>\n                <div className=\"meta\">port is port of service</div>\n                <div className=\"meta\">nodePort is port exposed to external world between 30000-32767</div>\n\n            </h6></i>\n            <p>Create a Service: <code>kubectl create -f (service-name).yml</code></p>\n            <p>Check status of running services : <code>kubectl get services</code></p>\n            <p>Alternate : <code>kubectl expose deployment (app-name) --p=(port-number) --type=(ClusterIP/NodePort/LoadBalancer)</code></p>\n            <p>For minikube (local machine), external ip is not provided by default, so run <code>minikube service (app-name)</code> </p>\n        </div>\n    \n        <div className=\"scrollblock block-pod\">\n            <h2>miscellaneous commands</h2>\n            <p className=\"meta\">manual scaling <code>kubectl scale deployment/(app-name) --replica=(number)</code></p>\n            <p className=\"meta\">history of deployment <code>kubectl rollout history deployment/(app-name)</code></p>\n            <p className=\"meta\">rollback to last <code>kubectl rollout undo deployment/(app-name)</code></p>\n            <p className=\"meta\">rollout to particular older version <code>kubectl rollout undo deployment/(app-name) --to-revision=(number)</code></p>\n        </div>\n\n        <div className=\"scrollblock block-pods\">\n            <h2>config.yml</h2>\n            <code>kubectl apply -f config.yml</code>\n        </div>\n\n\n      </div>\n    )\n\n    }\n\nexport default Kubernetes;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport arrow from '../../img/arrow.png';\nimport './reactive.css';\n\nfunction Reactive (){\n    return(\n        <div className=\"page-body\">\n            <div className=\"scrollblock\">\n            <h1>Spring 5 - the simple guide</h1>\n            <p>just a simple guide for getting started with reactive spring.</p>\n            <p className=\"meta\"> by <Link to=\"http://gnagia.github.io/\">Guneet Singh Nagia </Link></p>\n            <div><img src={arrow} alt=\"down\" /></div>\n        </div>\n    \n        <div className=\"scrollblock block-one\">\n            <h2>setup/dependencies</h2>\n            <p><Link to=\"#\">Java 9+</Link></p>\n            <p><Link to=\"#\">webflux</Link></p>\n        </div>\n    \n        <div className=\"scrollblock block-two\">\n            <h2>Publisher</h2>\n            <p> ----- mono -----</p>\n            <div className=\"meta\">Publisher with 0 or 1 element in data stream</div>\n            <p><code>Mono.just</code> Create a new Mono that emits the specified item</p>\n            <p><code>Mono block</code> Subscribe to this Mono and block indefinitely until a next signal is received</p>\n            <p><code>Mono subscribe</code> Subscribe a Consumer to this Mono that will consume all the sequence</p>\n            <p><code>Mono map+subscribe</code> Transforms the item emitted by this Mono by applying a synchronous function to it</p>\n            \n            <br />\n            <p> ----- flux -----</p>\n            <div className=\"meta\">Publisher with 0 or many element in data stream</div>\n            <p><code>flux.just</code> Create a new Mono that emits the specified item</p>\n            <p><code>flux filter+next</code> Filtering</p>\n            <p><code>single + doOnError + onErrorReturn</code> Error Handling</p>\n            <p><code>StepVerifier.create</code> Step Verifier</p>\n            <p><code>Flux.generate(SynchronousSink) + delay element</code> Generate streaming event</p>\n        </div>\n\n        <div className=\"scrollblock block-deployment\">\n            <h2>spring web client</h2>\n            <p>Replacement of RestTemplate </p>\n            <p><code>webclient.get().uri(\"...\").retrieve().bodyToMono(...class)</code></p>\n        </div>\n    \n       \n\n      </div>\n    )\n\n    }\n\nexport default Reactive;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport arrow from '../../img/arrow.png';\nimport './styles-docker.css';\n\nfunction Docker (){\n    return(\n        <div className=\"page-body\">\n            <div className=\"scrollblock\">\n            <h1>Docker - the simple guide</h1>\n            <p>just a simple guide for getting started with docker.</p>\n            <p className=\"meta\">\n                by <Link to=\"http://gnagia.github.io/\">Guneet Singh Nagia</Link> \n            </p>\n            <div><img src={arrow} alt=\"down\" /></div>\n            </div>\n\n            <div className=\"scrollblock block-one\">\n                <h2>Image</h2>\n                <p>First Create DockerFile</p>\n                <p>Create image : <code>docker build -t (image-name) .</code></p>\n                <p>List images : <code>docker images</code> </p>\n                <p>Delete image : <code>docker rmi (image-name)/docker prune</code></p>\n                <p>Analyze image : <code>docker image inspect</code></p>\n                \n            </div>\n\n            <div className=\"scrollblock block-two\">\n                <h2>Container</h2>\n                <p>Next is to run image as container, we can run as much containers we need from an image</p>\n                <p>Create Container : <code>docker run -d -p (port1:port2) --name (container-name) (dockerid)/(image-name)</code></p>\n                <p>List Containers : <code>docker ps -a</code></p>\n                <p>Stop Container : docker stop (container-name)</p>\n                <p>Delete Container : docker rm (container-name)</p>\n                <p>Logs of a Container : docker logs -f (container-name)</p>\n            </div>\n\n            <div className=\"scrollblock block-deployment\">\n            <h2>push image to docker hub</h2>\n            <p>If not logged in :\n            <code>docker login</code></p>\n            <p><code>docker tag (app-name) (dockerid)/(app-name)</code></p>\n            <p><code>docker push (dockerid)/(app-name)</code></p>\n            </div>\n\n            <div className=\"scrollblock block-deployment\">\n            <h2>docker network</h2>\n            <p>1) container to web, by default it is established.</p>\n            <p>2) container to Local DB, replace `localhost` in url with <code>host.docker.internal</code> or <code>docker.for.mac.host.internal</code></p>\n            <p>3) container to container communication\n                <div>Option 1 : Hardcode IPs</div>\n                <code>docker container inspect (conatiner-name)</code>. Then Copy the `IPAddress` under `NetworkSettings`. Then replace localhost with ipaddress of container .\n                <div>Option 2: Use network</div>\n                <div>Create Network <code>docker network create (network-name)</code></div>\n                <div>List Networks <code>docker network ls </code></div>\n                <div>Run container within network <code>docker run --network (network-name) ...</code></div>\n                <div>Replace localhost with container name and no need to publish port, as containers can interact freely with other container within network.</div>\n            </p>\n            </div>\n\n            <div className=\"scrollblock block-pods\">\n            <h2>deploy in cloud</h2>\n            <p>AWS : connect to EC2, where </p>\n            </div>\n        </div>\n    )\n    }\n\nexport default Docker;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header/header.component';\nimport Kubernetes from './pages/kubernetes/kubernetes';\nimport Reactive from './pages/reactive-spring/reactive';\nimport Docker from './pages/docker/docker';\n\nclass App extends React.Component {\n  \n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route path='/' exact component={Header} />\n          <Route path='/kubernetes' component={Kubernetes} />\n          <Route exact path=\"/docker\" component={Docker} />\n          <Route exact path='/reactive' component={Reactive} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>< App /></HashRouter>\n  ,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/arrow.222c6d8e.png\";"],"sourceRoot":""}