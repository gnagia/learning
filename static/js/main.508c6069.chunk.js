(window.webpackJsonpLearning=window.webpackJsonpLearning||[]).push([[0],{21:function(e,a,l){e.exports=l(37)},26:function(e,a,l){},27:function(e,a,l){},28:function(e,a,l){},34:function(e,a,l){},35:function(e,a,l){},36:function(e,a,l){},37:function(e,a,l){"use strict";l.r(a);var t=l(0),n=l.n(t),c=l(14),r=l.n(c),m=l(3),o=(l(26),l(15)),s=l(16),i=l(20),u=l(19),d=l(1),E=(l(27),l(28),function(){return n.a.createElement("div",{className:"wrapper"},n.a.createElement("div",{className:"container"},n.a.createElement("div",{className:"box"},n.a.createElement("div",{className:"content"},n.a.createElement("div",{className:"main"},"01"),n.a.createElement("div",{className:"type"},"Docker"),n.a.createElement("div",{className:"details"},"Containerization."),n.a.createElement(m.b,{className:"option",to:"/docker"},"Read More"))),n.a.createElement("div",{className:"box"},n.a.createElement("div",{className:"content"},n.a.createElement("div",{className:"main"},"02"),n.a.createElement("div",{className:"type"},"Kubernetes"),n.a.createElement("div",{className:"details"},"Orchestration tool"),n.a.createElement(m.b,{className:"option",to:"/kubernetes"},"Read More"))),n.a.createElement("div",{className:"box"},n.a.createElement("div",{className:"content"},n.a.createElement("div",{className:"main"},"03"),n.a.createElement("div",{className:"type"},"Spring 5"),n.a.createElement("div",{className:"details"},"Reactive Spring"),n.a.createElement(m.b,{className:"option",to:"/reactive"},"Read More")))))}),p=l(8),b=l.n(p);l(34);var k=function(){return n.a.createElement("div",{className:"page-body"},n.a.createElement("div",{className:"scrollblock"},n.a.createElement("h1",null,"Kubernetes - the simple guide"),n.a.createElement("p",null,"just a simple guide for getting started with kubernetes."),n.a.createElement("p",{className:"meta"}," by ",n.a.createElement(m.b,{to:"http://gnagia.github.io/"},"Guneet Singh Nagia ")),n.a.createElement("div",null,n.a.createElement("img",{src:b.a,alt:"down"}))),n.a.createElement("div",{className:"scrollblock block-one"},n.a.createElement("h2",null,"setup"),n.a.createElement("p",null,n.a.createElement(m.b,{to:"https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/"},"Install kubectl ")),n.a.createElement("p",null,n.a.createElement(m.b,{to:"#"},"Install virtualbox")),n.a.createElement("p",null,n.a.createElement(m.b,{to:"https://minikube.sigs.k8s.io/docs/start/"},"Install minikube"))),n.a.createElement("div",{className:"scrollblock block-two"},n.a.createElement("h2",null,"Objects"),n.a.createElement("div",{style:{display:"flex",flexDirection:"row"}},n.a.createElement("p",null,"Pods"),n.a.createElement("p",null,"Deployment"),n.a.createElement("p",null,"Service"),n.a.createElement("p",null,"Replica Set"))),n.a.createElement("div",{className:"scrollblock block-three"},n.a.createElement("h2",null,"pods"),n.a.createElement("p",null,"Smallest unit, contains containers, it deploys single instance of an application"),n.a.createElement("i",null,n.a.createElement("h6",{style:{textAlign:"left"}},n.a.createElement("ul",null,"apiVersion: v1"),n.a.createElement("ul",null,"kind: Pod"),n.a.createElement("ul",null,"metadata:",n.a.createElement("li",{className:"single"},"name:"),n.a.createElement("li",{className:"single"},"labels:"),n.a.createElement("li",{className:"double"},"key1:value1"),n.a.createElement("li",{className:"double"},"key2:value2")),n.a.createElement("ul",null,"spec:",n.a.createElement("li",{className:"single"},"containers:"),n.a.createElement("li",{className:"double"},"- name:"),n.a.createElement("li",{className:"double"}," \xa0\xa0\xa0image:")))),n.a.createElement("p",null,"Create a Pod: ",n.a.createElement("code",null,"kubectl create -f (pod-name).yml")),n.a.createElement("p",null,"Check status of running pods: ",n.a.createElement("code",null,"kubectl get pods")),n.a.createElement("p",null,"All Details of pod: ",n.a.createElement("code",null,"kubectl describe pod (pod-name)")),n.a.createElement("p",null,"Few Details of pod: ",n.a.createElement("code",null,"kubectl get pods  -o wide"))),n.a.createElement("div",{className:"scrollblock block-four"},n.a.createElement("h2",null,"deployment"),n.a.createElement("p",null,"Rolling updates, undo changes, pause and resume changes "),n.a.createElement("p",{className:"meta"}," If we create Deployment object, it will by default create replicaSet which by default creates Pods"),n.a.createElement("i",null,n.a.createElement("h6",{style:{textAlign:"left"}},n.a.createElement("ul",null,"apiVersion: apps/v1"),n.a.createElement("ul",null,"kind: Deployment"),n.a.createElement("ul",null,"metadata:",n.a.createElement("li",{className:"single"},"name:"),n.a.createElement("li",{className:"single"},"labels:"),n.a.createElement("li",{className:"double"},"key1:value1"),n.a.createElement("li",{className:"double"},"key2:value2")),n.a.createElement("ul",null,"spec:",n.a.createElement("li",{className:"single"},"replicas:"),n.a.createElement("li",{className:"single"},"selector:"),n.a.createElement("li",{className:"double"},"matchLables:"),n.a.createElement("li",{className:"triple"},"type:"),n.a.createElement("li",{className:"single"},"template:"),n.a.createElement("li",{className:"double"},"metadata:"),n.a.createElement("p",{className:"meta triple",style:{color:"white"}},"(copy metadata from pod object)")))),n.a.createElement("p",null,"Create a Deployment: ",n.a.createElement("code",null,"kubectl create -f (deployment-name).yml")),n.a.createElement("p",null,"Check status of running deployment: ",n.a.createElement("code",null,"kubectl get deployment")),n.a.createElement("p",null,"Rollback: ",n.a.createElement("code",null,"kubectl rollout status deployment/(deployment-name)")," "),n.a.createElement("p",null,"History: ",n.a.createElement("code",null,"kubectl rollout history deployment/(deployment-name)")," "),n.a.createElement("p",null,"Update: ",n.a.createElement("code",null,"kubectl apply -f (deployment-name).yml")," ")),n.a.createElement("div",{className:"scrollblock block-five"},n.a.createElement("h2",null,"Service"),n.a.createElement("p",null,"Resposible for exposing pod to other cluster and externally. It group pods with a shared IP"),n.a.createElement("i",null,n.a.createElement("h6",{style:{textAlign:"left"}},n.a.createElement("ul",null,"apiVersion: v1"),n.a.createElement("ul",null,"kind: Service"),n.a.createElement("ul",null,"metadata:",n.a.createElement("li",{className:"single"},"name:")),n.a.createElement("ul",null,"spec:",n.a.createElement("li",{className:"single"},"type:"),n.a.createElement("li",{className:"single"},"ports:"),n.a.createElement("li",{className:"double"},"- \xa0\xa0\xa0targetPort:"),n.a.createElement("li",{className:"double"},"\xa0\xa0\xa0\xa0 port:"),n.a.createElement("li",{className:"double"},"\xa0\xa0\xa0\xa0 nodePort:"),n.a.createElement("li",{className:"single"},"selector:"),n.a.createElement("li",{className:"double"},"app:"),n.a.createElement("li",{className:"double"},"type:")),n.a.createElement("div",{className:"meta"},"selector is labels of pod"),n.a.createElement("div",{className:"meta"},"type: NodePort/ClusterIP/LoadBalancer"),n.a.createElement("div",{className:"meta"},"targetPort is port of POD"),n.a.createElement("div",{className:"meta"},"port is port of service"),n.a.createElement("div",{className:"meta"},"nodePort is port exposed to external world between 30000-32767"))),n.a.createElement("p",null,"Create a Service: ",n.a.createElement("code",null,"kubectl create -f (service-name).yml")),n.a.createElement("p",null,"Check status of running services : ",n.a.createElement("code",null,"kubectl get services")),n.a.createElement("p",null,"Alternate : ",n.a.createElement("code",null,"kubectl expose deployment (app-name) --p=(port-number) --type=(ClusterIP/NodePort/LoadBalancer)")),n.a.createElement("p",null,"For minikube (local machine), external ip is not provided by default, so run ",n.a.createElement("code",null,"minikube service (app-name)")," ")),n.a.createElement("div",{className:"scrollblock block-pod"},n.a.createElement("h2",null,"miscellaneous commands"),n.a.createElement("p",{className:"meta"},"manual scaling ",n.a.createElement("code",null,"kubectl scale deployment/(app-name) --replica=(number)")),n.a.createElement("p",{className:"meta"},"history of deployment ",n.a.createElement("code",null,"kubectl rollout history deployment/(app-name)")),n.a.createElement("p",{className:"meta"},"rollback to last ",n.a.createElement("code",null,"kubectl rollout undo deployment/(app-name)")),n.a.createElement("p",{className:"meta"},"rollout to particular older version ",n.a.createElement("code",null,"kubectl rollout undo deployment/(app-name) --to-revision=(number)"))),n.a.createElement("div",{className:"scrollblock block-pods"},n.a.createElement("h2",null,"config.yml"),n.a.createElement("code",null,"kubectl apply -f config.yml")))};l(35);var g=function(){return n.a.createElement("div",{className:"page-body"},n.a.createElement("div",{className:"scrollblock"},n.a.createElement("h1",null,"Spring 5 - the simple guide"),n.a.createElement("p",null,"just a simple guide for getting started with reactive spring."),n.a.createElement("p",{className:"meta"}," by ",n.a.createElement(m.b,{to:"http://gnagia.github.io/"},"Guneet Singh Nagia ")),n.a.createElement("div",null,n.a.createElement("img",{src:b.a,alt:"down"}))),n.a.createElement("div",{className:"scrollblock block-one"},n.a.createElement("h2",null,"setup/dependencies"),n.a.createElement("p",null,n.a.createElement(m.b,{to:"#"},"Java 9+")),n.a.createElement("p",null,n.a.createElement(m.b,{to:"#"},"webflux"))),n.a.createElement("div",{className:"scrollblock block-two"},n.a.createElement("h2",null,"Publisher"),n.a.createElement("p",null," ----- mono -----"),n.a.createElement("div",{className:"meta"},"Publisher with 0 or 1 element in data stream"),n.a.createElement("p",null,n.a.createElement("code",null,"Mono.just")," Create a new Mono that emits the specified item"),n.a.createElement("p",null,n.a.createElement("code",null,"Mono block")," Subscribe to this Mono and block indefinitely until a next signal is received"),n.a.createElement("p",null,n.a.createElement("code",null,"Mono subscribe")," Subscribe a Consumer to this Mono that will consume all the sequence"),n.a.createElement("p",null,n.a.createElement("code",null,"Mono map+subscribe")," Transforms the item emitted by this Mono by applying a synchronous function to it"),n.a.createElement("br",null),n.a.createElement("p",null," ----- flux -----"),n.a.createElement("div",{className:"meta"},"Publisher with 0 or many element in data stream"),n.a.createElement("p",null,n.a.createElement("code",null,"flux.just")," Create a new Mono that emits the specified item"),n.a.createElement("p",null,n.a.createElement("code",null,"flux filter+next")," Filtering"),n.a.createElement("p",null,n.a.createElement("code",null,"single + doOnError + onErrorReturn")," Error Handling"),n.a.createElement("p",null,n.a.createElement("code",null,"StepVerifier.create")," Step Verifier"),n.a.createElement("p",null,n.a.createElement("code",null,"Flux.generate(SynchronousSink) + delay element")," Generate streaming event")),n.a.createElement("div",{className:"scrollblock block-deployment"},n.a.createElement("h2",null,"spring web client"),n.a.createElement("p",null,"Replacement of RestTemplate "),n.a.createElement("p",null,n.a.createElement("code",null,'webclient.get().uri("...").retrieve().bodyToMono(...class)'))))};l(36);var h=function(){return n.a.createElement("div",{className:"page-body"},n.a.createElement("div",{className:"scrollblock"},n.a.createElement("h1",null,"Docker - the simple guide"),n.a.createElement("p",null,"just a simple guide for getting started with docker."),n.a.createElement("p",{className:"meta"},"by ",n.a.createElement(m.b,{to:"http://gnagia.github.io/"},"Guneet Singh Nagia")),n.a.createElement("div",null,n.a.createElement("img",{src:b.a,alt:"down"}))),n.a.createElement("div",{className:"scrollblock block-one"},n.a.createElement("h2",null,"Image"),n.a.createElement("p",null,"First Create DockerFile"),n.a.createElement("p",null,"Create image : ",n.a.createElement("code",null,"docker build -t (image-name) .")),n.a.createElement("p",null,"List images : ",n.a.createElement("code",null,"docker images")," "),n.a.createElement("p",null,"Delete image : ",n.a.createElement("code",null,"docker rmi (image-name)/docker prune")),n.a.createElement("p",null,"Analyze image : ",n.a.createElement("code",null,"docker image inspect"))),n.a.createElement("div",{className:"scrollblock block-two"},n.a.createElement("h2",null,"Container"),n.a.createElement("p",null,"Next is to run image as container, we can run as much containers we need from an image"),n.a.createElement("p",null,"Create Container : ",n.a.createElement("code",null,"docker run -d -p (port1:port2) --name (container-name) (dockerid)/(image-name)")),n.a.createElement("p",null,"List Containers : ",n.a.createElement("code",null,"docker ps -a")),n.a.createElement("p",null,"Stop Container : docker stop (container-name)"),n.a.createElement("p",null,"Delete Container : docker rm (container-name)"),n.a.createElement("p",null,"Logs of a Container : docker logs -f (container-name)")),n.a.createElement("div",{className:"scrollblock block-deployment"},n.a.createElement("h2",null,"push image to docker hub"),n.a.createElement("p",null,"If not logged in :",n.a.createElement("code",null,"docker login")),n.a.createElement("p",null,n.a.createElement("code",null,"docker tag (app-name) (dockerid)/(app-name)")),n.a.createElement("p",null,n.a.createElement("code",null,"docker push (dockerid)/(app-name)"))),n.a.createElement("div",{className:"scrollblock block-deployment"},n.a.createElement("h2",null,"docker network"),n.a.createElement("p",null,"1) container to web, by default it is established."),n.a.createElement("p",null,"2) container to Local DB, replace `localhost` in url with ",n.a.createElement("code",null,"host.docker.internal")," or ",n.a.createElement("code",null,"docker.for.mac.host.internal")),n.a.createElement("p",null,"3) container to container communication",n.a.createElement("div",null,"Option 1 : Hardcode IPs"),n.a.createElement("code",null,"docker container inspect (conatiner-name)"),". Then Copy the `IPAddress` under `NetworkSettings`. Then replace localhost with ipaddress of container .",n.a.createElement("div",null,"Option 2: Use network"),n.a.createElement("div",null,"Create Network ",n.a.createElement("code",null,"docker network create (network-name)")),n.a.createElement("div",null,"List Networks ",n.a.createElement("code",null,"docker network ls ")),n.a.createElement("div",null,"Run container within network ",n.a.createElement("code",null,"docker run --network (network-name) ...")),n.a.createElement("div",null,"Replace localhost with container name and no need to publish port, as containers can interact freely with other container within network."))),n.a.createElement("div",{className:"scrollblock block-pods"},n.a.createElement("h2",null,"deploy in cloud"),n.a.createElement("p",null,"AWS : connect to EC2, where ")))},N=function(e){Object(i.a)(l,e);var a=Object(u.a)(l);function l(){return Object(o.a)(this,l),a.apply(this,arguments)}return Object(s.a)(l,[{key:"render",value:function(){return n.a.createElement("div",null,n.a.createElement(d.c,null,n.a.createElement(d.a,{path:"/",exact:!0,component:E}),n.a.createElement(d.a,{path:"/kubernetes",component:k}),n.a.createElement(d.a,{exact:!0,path:"/docker",component:h}),n.a.createElement(d.a,{exact:!0,path:"/reactive",component:g})))}}]),l}(n.a.Component);r.a.render(n.a.createElement(m.a,{basename:"/learning"},n.a.createElement(N,null)),document.getElementById("root"))},8:function(e,a,l){e.exports=l.p+"static/media/arrow.222c6d8e.png"}},[[21,1,2]]]);
//# sourceMappingURL=main.508c6069.chunk.js.map